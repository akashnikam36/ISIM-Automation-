package com.person;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Properties;

public class CSVParser {
	static final String WS_CONFIG_FILE = "Properties/People2.csv";
	public static void main(String args[]) throws Exception{
		
		BufferedReader bufferedReader = new BufferedReader(new FileReader(WS_CONFIG_FILE));
		String separator = ",";
		String singleLine;
		int lineCount = 0;
		String columnName[] = null;
		while ((singleLine = bufferedReader.readLine()) != null) {
			if (lineCount == 0) {
				columnName = singleLine.split(separator);
				lineCount++;
				continue;
			}
			String[] separatedValues = singleLine.split(separator);
			//System.out.println(separatedValues[0]+"--"+columnName[0]);
			HashMap<String, String> entryHashMap = hashMap(separatedValues, columnName);
			
		}
		
		
	}
	public static HashMap<String, String> hashMap(String values[], String columnName[]) {
		
		List<String> mapList = getMap(columnName);
		String[] map = new String[mapList.size()];
		map = (String[]) mapList.toArray(map);
		HashMap<String, String> entryHashMap = new HashMap<String, String>();
		for (int index = 0; index < values.length; index++) {
			if(!values[index].isEmpty())
				entryHashMap.put(map[index], values[index]);
		}

		return entryHashMap;

	}
	
	public static List<String> getMap(String columnName[]) {
		
		Properties constantsProperties = new Properties();
		String propFileName = "Properties/ldap_mapping.properties";
		FileReader reader = null;
		try {
			
			reader = new FileReader(propFileName);
		} catch (FileNotFoundException fileNotFoundException) {

			fileNotFoundException.printStackTrace();
		}
		if (reader != null) {
			try {
				constantsProperties.load(reader);
				reader.close();
			} catch (IOException ioException) {

			}
		}

		List<String> map = new ArrayList<String>();
		for (int index = 0; index < columnName.length; index++) {
			if (constantsProperties.containsKey(columnName[index])) {
				//System.out.println(columnName[index]);
				map.add(constantsProperties.getProperty(columnName[index]));

			}

		}
		//System.out.println("MAP SIZE="+map.size());
		return map;

	}

}
